import { world, system, EquipmentSlot, ItemStack } from '@minecraft/server';

// Cooldown optimization
const titleUpdateRate = 2;
let lastTitleUpdate = 0;
const cooldownPercentages = new Map();
const lastSelectedItem = new Map();
const activeCooldowns = new Set();
const cooldowns = new Map();

world.afterEvents.playerBreakBlock.subscribe(({
    itemStackAfterBreak: _0x3b80d9,
    player: _0x144b98
}) => {
    if (!_0x3b80d9.hasTag("raiyon:is_axe") || _0x144b98.getGameMode() === "creative") {
        return;
    }
    const _0x31f6bd = _0x144b98?.["getComponent"]('equippable');
    const _0x1bf268 = _0x3b80d9.getComponent("enchantable")?.["getEnchantment"]("unbreaking")?.["level"];
    const _0x3637d2 = {
        0x1: 0.5,
        0x2: 0.66,
        0x3: 0.75
    };
    const _0x4678f3 = _0x3637d2[_0x1bf268] || 0x0;
    const _0x363f65 = Math.random();
    if (_0x363f65 >= _0x4678f3) {
        if (_0x3b80d9.getComponent("durability").damage < _0x3b80d9.getComponent("durability").maxDurability) {
            _0x3b80d9.getComponent("durability").damage++;
            _0x31f6bd.setEquipment(EquipmentSlot.Mainhand, _0x3b80d9);
        } else {
            _0x31f6bd.setEquipment(EquipmentSlot.Mainhand, new ItemStack("minecraft:air"));
            _0x144b98.playSound("random.break");
        }
    }
});

const axeTest = ["hacha", "battle", 'hammer', 'sickle', "gauntlets", "_axe", "scythe"];
const swordTest = ["polearm", 'karambit', "dagger", "claymore", "glaive", "blade", 'knife', 'sable', "espada", 'katana', "sword", "Halberd", "Spade"];
function startCooldown(player, cooldownType, cooldownDuration) {
    const cooldownStart = Date.now();
    const cooldownEnd = cooldownStart + cooldownDuration * 1000;
    const playerCooldowns = cooldowns.get(player.id) || {};
    playerCooldowns[cooldownType] = { cooldownStart, cooldownEnd };
    cooldowns.set(player.id, playerCooldowns);
    activeCooldowns.add(player.id);
}

function getCooldownPercent(player, cooldownType) {
    const playerCooldowns = cooldowns.get(player.id) || {};
    const cooldownData = playerCooldowns[cooldownType];
    if (cooldownData) {
        const remainingTime = Math.max(cooldownData.cooldownEnd - Date.now(), 0);
        const cooldownPercent = Math.max(100 - (remainingTime / (cooldownData.cooldownEnd - cooldownData.cooldownStart)) * 100, 0);
        return cooldownPercent;
    }
    return 100;
}
world.afterEvents.entityHurt.subscribe(({
    damage: _0x13efde,
    damageSource: _0x18c4da,
    hurtEntity: _0x3edd00
}) => {
    if (!_0x18c4da?.["damagingEntity"]?.["isFalling"] && _0x18c4da?.["damagingEntity"]?.["getDynamicProperty"]("raiyon:sprint") < 0xa && _0x18c4da?.['cause'] === 'entityAttack') {
        _0x18c4da.damagingEntity.runCommand("playsound knockback @a[r=5]");
        const {
            x: _0x1d64e8,
            z: _0x335208
        } = _0x18c4da.damagingEntity.getViewDirection();
        _0x3edd00.applyKnockback(_0x1d64e8, _0x335208, 0.75, 0.35);
    }

    if (_0x18c4da?.["damagingEntity"]?.['hasTag']("critical_hit") && _0x18c4da?.['cause'] === 'entityAttack') {
        const _0x41a702 = Math.floor(_0x13efde);
        for (let _0x1904a0 = 0x0; _0x1904a0 < _0x41a702 && _0x1904a0 < 0xf; _0x1904a0 += 0x2) {
            _0x3edd00.dimension.spawnParticle("armor:critical_hit_custom", _0x3edd00.location);
        }
        _0x18c4da.damagingEntity.playSound('critical_hit', _0x18c4da.damagingEntity.location);
    }
});
function getSweepingEdgeLevel(_0x1d7b7b) {
    const _0x3b9999 = _0x1d7b7b.find(_0x5d72bd => /Sweeping Edge (I{1,3})/.test(_0x5d72bd));
    if (_0x3b9999) {
        const _0x53ef21 = _0x3b9999.match(/Sweeping Edge (I{1,3})/)[0x1];
        switch (_0x53ef21) {
            case 'I':
                return 0x1;
            case 'II':
                return 0x2;
            case "III":
                return 0x3;
        }
    }
    return 0x0;
}

world.afterEvents.entityHitEntity.subscribe(({
    hitEntity: _0x2e078b,
    damagingEntity: _0x1977db
}) => {
    if (_0x1977db?.["typeId"] === "minecraft:player") {
        const _0x47415f = _0x1977db?.["getComponent"]("equippable");
        const _0x23891b = _0x47415f.getEquipment(EquipmentSlot.Mainhand);
        const _0xdebde = _0x23891b?.["getComponent"]('enchantable')?.['getEnchantment']("sharpness");
        const _0x302ec7 = _0x23891b?.['getComponent']("enchantable")?.["getEnchantment"]("density");
        const velocity = _0x1977db.getVelocity();
        const isCritical = !_0x1977db.isOnGround && velocity && velocity.y < -0.1;

        if (_0xdebde || _0x302ec7) {
            _0x2e078b.runCommand("particle armor:enchanted_hit ~ ~1 ~");

            if (isCritical) {
                _0x2e078b.runCommand("effect @s instant_health 1 0 true");
            } else {
                _0x2e078b.runCommand("effect @s regeneration 3 0 true");
            }
        }

        if (_0x1977db?.["getDynamicProperty"]("sword:score") >= 0xe && _0x1977db.isOnGround && _0x1977db.getDynamicProperty("raiyon:sprint") >= 0xa) {
            _0x1977db.runCommand("function java_combat/sweep");
            let _0x557396 = _0x23891b.getLore() || [];
            let _0xa29129 = getSweepingEdgeLevel(_0x557396);
            _0x1977db.runCommand("execute at @s positioned ^^1^2.5 run damage @e[r=2,type=!minecraft:item] " + (0x1 + _0xa29129) + " entity_attack entity @s");
        }

        _0x1977db?.["setDynamicProperty"]("mace:score", 0x0);
        _0x1977db?.["setDynamicProperty"]("axe:score", 0x0);
        _0x1977db?.["setDynamicProperty"]("sword:score", 0x0);
        _0x1977db?.["setDynamicProperty"]("pickaxe:score", 0x0);
        _0x1977db?.["setDynamicProperty"]("shovel:score", 0x0);
        _0x1977db?.["setDynamicProperty"]("hoe:score", 0x0);
        _0x1977db?.['setDynamicProperty']("trident:score", 0x0);
        _0x1977db?.["setDynamicProperty"]("hand:score", 0x0);
    }

    system.runTimeout(() => {
        const _0x511c5a = _0x2e078b?.["getComponent"]('equippable');
        const _0x2c1684 = _0x511c5a?.["getEquipment"](EquipmentSlot.Mainhand);
        const _0x22d756 = _0x511c5a?.['getEquipment'](EquipmentSlot.Offhand);

        if ((_0x22d756?.["typeId"] === "minecraft:shield" || _0x2c1684?.["typeId"] === "minecraft:shield") && _0x2e078b.typeId === "minecraft:player" && !_0x2e078b?.["hasTag"]('raiyon:EntityAttacked') && _0x2e078b.isSneaking) {
            const _0x1a7484 = _0x1977db.getViewDirection();
            _0x1977db.applyKnockback(_0x1a7484.x, _0x1a7484.z, 0.3, -0.4);
        }
    }, 0x1);
});
world.afterEvents.entityHitEntity.subscribe(async (event) => {
    const attacker = event.damagingEntity;
    const target = event.hitEntity;

    if (!attacker || !target) {
        return;
    }

    const inventory = attacker.getComponent("minecraft:inventory")?.container;
    if (!inventory) return;

    const mainHandItem = inventory.getItem(attacker.selectedSlotIndex);
    if (!mainHandItem) return;

    const validTools = ["axe", "sword", "pickaxe", "hoe", "shovel"];
    const isValidTool = validTools.some(tool => mainHandItem.typeId.includes(tool));

    if ((target.typeId == "minecraft:boat" || target.typeId == "minecraft:chest_boat") && isValidTool) {
        target.applyDamage(100, {
            cause: "none",
            source: attacker,
        });
    }
});
world.afterEvents.entityHurt.subscribe(({
    hurtEntity: _0x3fe72e,
    damageSource: _0x30097f
}) => {
    if (_0x3fe72e.typeId === "minecraft:player" && _0x30097f.cause === "entityAttack") {
        _0x3fe72e.addTag("raiyon:EntityAttacked");
        system.runTimeout(() => {
            _0x3fe72e.removeTag('raiyon:EntityAttacked');
        }, 0x2);
    }
});
world.afterEvents.entityHurt.subscribe(({
    hurtEntity: _0x3fe72e,
    damageSource: _0x30097f
}) => {
    if (_0x3fe72e.typeId === "minecraft:player" && _0x30097f.cause === "entityAttack") {
        _0x3fe72e.addTag("raiyon:EntityAttacked");
        system.runTimeout(() => {
            _0x3fe72e.removeTag('raiyon:EntityAttacked');
        }, 0x2);
    }
});
world.afterEvents.entityHitBlock.subscribe(({
    damagingEntity: _0x1b3362
}) => {
    _0x1b3362?.["setDynamicProperty"]("mace:score", 0x0);
    _0x1b3362?.["setDynamicProperty"]("axe:score", 0x0);
    _0x1b3362?.['setDynamicProperty']("sword:score", 0x0);
    _0x1b3362?.["setDynamicProperty"]("pickaxe:score", 0x0);
    _0x1b3362?.["setDynamicProperty"]("shovel:score", 0x0);
    _0x1b3362?.['setDynamicProperty']('hoe:score', 0x0);
    _0x1b3362?.["setDynamicProperty"]('trident:score', 0x0);
    _0x1b3362?.["setDynamicProperty"]("hand:score", 0x0);
});
const axeScoreIcon = {
    0x0: '',
    0x1: '',
    0x2: '',
    0x3: '',
    0x4: '',
    0x5: '',
    0x6: '',
    0x7: '',
    0x8: '',
    0x9: '',
    0xa: '',
    0xb: '',
    0xc: '',
    0xd: '',
    0xe: '',
    0xf: '',
    0x10: '',
    0x11: '',
    0x12: '',
    0x13: '',
    0x14: '',
    0x15: " "
};
const swordScoreIcon = {
    0x0: '',
    0x1: '',
    0x2: '',
    0x3: '',
    0x4: '',
    0x5: '',
    0x6: '',
    0x7: '',
    0x8: '',
    0x9: '',
    0xa: '',
    0xb: '',
    0xc: '',
    0xd: '',
    0xe: '',
    0xe: " "
};
const handScoreIcon = {
    0x0: '',
    0x1: '',
    0x2: '',
    0x3: '',
    0x4: '',
    0x5: '',
    0x6: '',
    0x7: '',
    0x8: " "
};
const maceScoreIcon = {
    0x0: '',
    0x2: '',
    0x4: '',
    0x6: '',
    0x8: '',
    0xa: '',
    0xc: '',
    0xe: '',
    0x10: '',
    0x12: '',
    0x14: '',
    0x16: '',
    0x18: '',
    0x1a: '',
    0x1c: '',
    0x1e: '',
    0x20: '',
    0x22: '',
    0x24: '',
    0x26: '',
    0x28: '',
    0x2a: ""
};
system.runInterval(() => {
    const _0x442a01 = world.getAllPlayers();
    _0x442a01.forEach(_0x588e0c => {
        const _0x49c4e8 = _0x588e0c?.["getComponent"]('equippable');
        const _0x488a8e = _0x49c4e8.getEquipment(EquipmentSlot.Mainhand);
        const _0x2705e2 = _0x488a8e?.["getComponent"]('enchantable')?.["getEnchantment"]("sharpness");
        const _0x46983b = _0x488a8e?.["typeId"] === 'minecraft:wooden_axe' ? "raiyon:wooden_axe" : _0x488a8e?.["typeId"] === 'minecraft:stone_axe' ? "raiyon:stone_axe" : _0x488a8e?.["typeId"] === "minecraft:iron_axe" ? 'raiyon:iron_axe' : _0x488a8e?.['typeId'] === "minecraft:diamond_axe" ? "raiyon:diamond_axe" : _0x488a8e?.["typeId"] === 'minecraft:netherite_axe' ? "raiyon:netherite_axe" : _0x488a8e?.["typeId"] === "minecraft:golden_axe" ? "raiyon:golden_axe" : undefined;
        if (_0x46983b !== undefined) {
            let _0x313d68 = _0x46983b === null ? offHandItem : _0x488a8e;
            const _0x16982c = _0x313d68.getComponent('enchantable');
            const _0x37c3e4 = _0x16982c.getEnchantments();
            const _0x4b87e0 = new ItemStack(_0x46983b, 0x1);
            const _0x85f115 = _0x313d68.getComponent("minecraft:durability");
            _0x37c3e4.forEach(_0x146737 => {
                const _0x30a9f7 = _0x4b87e0.getComponent("enchantable");
                _0x30a9f7.addEnchantment({
                    'level': _0x146737.level,
                    'type': _0x146737.type
                });
            });
            const _0x2db51d = _0x4b87e0.getComponent("durability");
            _0x2db51d.damage = _0x85f115.damage;
            if (!_0x2db51d) {
                return;
            }
            let _0x2d301b = _0x46983b === null ? EquipmentSlot.Offhand : EquipmentSlot.Mainhand;
            _0x49c4e8.setEquipment(_0x2d301b, _0x4b87e0);
        }
        const _0xf2e148 = _0x588e0c?.['getDynamicProperty']("axe:score");
        const _0x2bb1d3 = _0x588e0c?.["getDynamicProperty"]("sword:score");
        const _0x3fcda5 = _0x588e0c?.['getDynamicProperty']("mace:score");
        const _0x55a838 = _0x588e0c?.['getDynamicProperty']("pickaxe:score");
        const _0x2459e6 = _0x588e0c?.["getDynamicProperty"]("shovel:score");
        const _0x2c0816 = _0x588e0c?.['getDynamicProperty']("hoe:score");
        const _0x38dce4 = _0x588e0c?.["getDynamicProperty"]("trident:score");
        const _0x3cbd14 = _0x588e0c?.['getDynamicProperty']('hand:score');
        if (_0xf2e148 === 0x0 && _0x2bb1d3 === 0x0 && _0x3fcda5 === 0x0 && _0x55a838 === 0x0 && _0x2459e6 === 0x0 && _0x2c0816 === 0x0 && _0x38dce4 === 0x0) {
            if (_0x3cbd14 === 0x0) {
                _0x588e0c.playAnimation('animation.player.hand');
            }
            _0x588e0c.onScreenDisplay.setTitle(handScoreIcon[_0x3cbd14] || '');
            _0x588e0c?.["setDynamicProperty"]("hand:score", _0x3cbd14 >= 0x8 ? _0x3cbd14 + 0x0 : _0x3cbd14 + 0x1);
        } else {
            _0x588e0c?.["setDynamicProperty"]("hand:score", 0x0);
        }
        if (_0x488a8e?.["typeId"]["includes"]("trident") || _0x488a8e?.["typeId"]["includes"]("impaler")) {
            if (weaknessAmplifierAxe(damageId(_0x488a8e?.["typeId"]), _0x38dce4) !== 0x0) {
                _0x588e0c.addEffect("weakness", 0x2, {
                    'amplifier': _0x2705e2?.["level"] >= 0x4 ? 0xc : weaknessAmplifierAxe(damageId(_0x488a8e?.["typeId"]), _0x38dce4) - 0x1,
                    'showParticles': false
                });
            }
            if (_0x38dce4 === 0x0) {
                _0x588e0c.playAnimation("animation.player.axe");
            }
            _0x588e0c.onScreenDisplay.setTitle(axeScoreIcon[_0x38dce4] || '');
            _0x588e0c?.["setDynamicProperty"]("trident:score", _0x38dce4 >= 0x15 ? _0x38dce4 + 0x0 : _0x38dce4 + 0x1);
        } else {
            _0x588e0c?.["setDynamicProperty"]("trident:score", 0x0);
        }
        if (_0x488a8e?.["typeId"]["includes"]("shovel")) {
            if (weaknessAmplifierAxe(damageId(_0x488a8e?.["typeId"]), _0x2459e6) !== 0x0) {
                _0x588e0c.addEffect("weakness", 0x2, {
                    'amplifier': _0x2705e2?.["level"] >= 0x4 ? 0xc : weaknessAmplifierAxe(damageId(_0x488a8e?.['typeId']), _0x2459e6) - 0x1,
                    'showParticles': false
                });
            }
            if (_0x2459e6 === 0x0) {
                _0x588e0c.playAnimation("animation.player.axe");
            }
            _0x588e0c.onScreenDisplay.setTitle(axeScoreIcon[_0x2459e6] || '');
            _0x588e0c?.['setDynamicProperty']("shovel:score", _0x2459e6 >= 0x15 ? _0x2459e6 + 0x0 : _0x2459e6 + 0x1);
        } else {
            _0x588e0c?.["setDynamicProperty"]("shovel:score", 0x0);
        }
        if (_0x488a8e?.['typeId']["includes"]('hoe')) {
            if (weaknessAmplifierAxe(damageId(_0x488a8e?.["typeId"]), _0x2c0816) !== 0x0) {
                _0x588e0c.addEffect("weakness", 0x2, {
                    'amplifier': _0x2705e2?.["level"] >= 0x4 ? 0xc : weaknessAmplifierAxe(damageId(_0x488a8e?.["typeId"]), _0x2c0816) - 0x1,
                    'showParticles': false
                });
            }
            if (_0x2c0816 === 0x0) {
                _0x588e0c.playAnimation("animation.player.axe");
            }
            _0x588e0c.onScreenDisplay.setTitle(axeScoreIcon[_0x2c0816] || '');
            _0x588e0c?.["setDynamicProperty"]("hoe:score", _0x2c0816 >= 0x15 ? _0x2c0816 + 0x0 : _0x2c0816 + 0x1);
        } else {
            _0x588e0c?.["setDynamicProperty"]("hoe:score", 0x0);
        }
        if (_0x488a8e?.["typeId"]["includes"]("pickaxe")) {
            if (weaknessAmplifierAxe(damageId(_0x488a8e?.["typeId"]), _0x55a838) !== 0x0) {
                _0x588e0c.addEffect("weakness", 0x2, {
                    'amplifier': _0x2705e2?.["level"] >= 0x4 ? 0xc : weaknessAmplifierAxe(damageId(_0x488a8e?.["typeId"]), _0x55a838) - 0x1,
                    'showParticles': false
                });
            }
            if (_0x55a838 === 0x0) {
                _0x588e0c.playAnimation("animation.player.axe");
            }
            _0x588e0c.onScreenDisplay.setTitle(axeScoreIcon[_0x55a838] || '');
            _0x588e0c?.["setDynamicProperty"]("pickaxe:score", _0x55a838 >= 0x15 ? _0x55a838 + 0x0 : _0x55a838 + 0x1);
        } else {
            _0x588e0c?.['setDynamicProperty']('pickaxe:score', 0x0);
        }
        if (axeTest.some(_0x612f0d => _0x488a8e?.['typeId']["includes"](_0x612f0d))) {
            if (weaknessAmplifierAxe(damageId(_0x488a8e?.["typeId"]), _0xf2e148) !== 0x0) {
                _0x588e0c.addEffect("weakness", 0x2, {
                    'amplifier': _0x2705e2?.['level'] >= 0x4 ? 0xc : weaknessAmplifierAxe(damageId(_0x488a8e?.["typeId"]), _0xf2e148) - 0x1,
                    'showParticles': false
                });
            }
            if (_0xf2e148 === 0x0) {
                _0x588e0c.playAnimation("animation.player.axe");
            }
            _0x588e0c.onScreenDisplay.setTitle(axeScoreIcon[_0xf2e148] || '');
            _0x588e0c?.["setDynamicProperty"]("axe:score", _0xf2e148 >= 0x15 ? _0xf2e148 + 0x0 : _0xf2e148 + 0x1);
        } else {
            _0x588e0c?.["setDynamicProperty"]("axe:score", 0x0);
        }
        if (_0x488a8e?.["typeId"] === "minecraft:mace") {
            // In your system.runInterval where the mace cooldown is handled
            if (_0x488a8e?.["typeId"] === "minecraft:mace") {
                if (weaknessAmplifierMace(damageId(_0x2705e2 ? 0xa : _0x488a8e?.["typeId"]), _0x3fcda5) !== 0x0) {
                    _0x588e0c.addEffect("weakness", 0x2, {
                        'amplifier': weaknessAmplifierMace(damageId(_0x488a8e?.["typeId"]), _0x3fcda5) - 0x1,
                        'showParticles': false
                    });
                }

                if (_0x3fcda5 === 0x0) {
                    _0x588e0c.playAnimation("animation.player.mace");
                }

                // Replace the direct title setting with interpolated values
                const smoothPercent = (_0x3fcda5 / 0x2a) * 100;
                _0x588e0c.onScreenDisplay.setTitle(maceScoreIcon[_0x3fcda5] || '', {
                    fadeInDuration: 2,
                    stayDuration: 20,
                    fadeOutDuration: 2
                });

                _0x588e0c?.["setDynamicProperty"]('mace:score', _0x3fcda5 >= 0x2a ? _0x3fcda5 + 0x0 : _0x3fcda5 + 0x1);
            }
            if (_0x3fcda5 === 0x0) {
                _0x588e0c.playAnimation("animation.player.mace");
            }
            _0x588e0c.onScreenDisplay.setTitle(maceScoreIcon[_0x3fcda5] || '');
            _0x588e0c?.["setDynamicProperty"]('mace:score', _0x3fcda5 >= 0x2a ? _0x3fcda5 + 0x0 : _0x3fcda5 + 0x1);
        } else {
            _0x588e0c?.["setDynamicProperty"]('mace:score', 0x0);
        }
        if (swordTest.some(_0x576826 => _0x488a8e?.['typeId']["includes"](_0x576826))) {
            if (weaknessAmplifierSword(damageId(_0x488a8e?.["typeId"]), _0x2bb1d3) !== 0x0) {
                _0x588e0c.addEffect('weakness', 0x2, {
                    'amplifier': _0x2705e2?.["level"] >= 0x4 ? 0x9 : weaknessAmplifierSword(damageId(_0x488a8e?.["typeId"]), _0x2bb1d3) - 0x1,
                    'showParticles': false
                });
            }
            if (_0x2bb1d3 === 0x0) {
                _0x588e0c.playAnimation('animation.player.sword');
            }
            _0x588e0c.onScreenDisplay.setTitle(swordScoreIcon[_0x2bb1d3] || '');
            _0x588e0c?.['setDynamicProperty']('sword:score', _0x2bb1d3 >= 0x10 ? _0x2bb1d3 + 0x0 : _0x2bb1d3 + 0x1);
        } else {
            _0x588e0c?.["setDynamicProperty"]("sword:score", 0x0);
        }
        if ((_0x2bb1d3 >= 0xe || _0x3fcda5 >= 0x2a || _0xf2e148 >= 0x15 || _0x2459e6 >= 0x15 || _0x55a838 >= 0x15 || _0x38dce4 >= 0x15 || _0x2c0816 >= 0x15 || _0x3cbd14 >= 0x8) && _0x588e0c.isFalling) {
            _0x588e0c.addTag("critical_hit");
        } else {
            _0x588e0c.removeTag("critical_hit");
        }
        const _0x27aa73 = _0x588e0c.getEntitiesFromViewDirection({
            'maxDistance': 0x3
        });
        for (const _0x183cac of _0x588e0c.getEntitiesFromViewDirection({
            'maxDistance': 0x3
        })) {
            if (_0x183cac.entity.getComponent('health')) {
                if (_0x2bb1d3 >= 0xe || _0x3fcda5 >= 0x2a || _0xf2e148 >= 0x15 || _0x2459e6 >= 0x15 || _0x55a838 >= 0x15 || _0x38dce4 >= 0x15 || _0x2c0816 >= 0x15 || _0x3fcda5 >= 0x2a || _0x3cbd14 >= 0x8) {
                    if (_0x27aa73.length > 0x0) {
                        _0x588e0c.onScreenDisplay.setTitle('');
                    }
                    if (_0x27aa73.length === 0x0) {
                        _0x588e0c.onScreenDisplay.setTitle(" ");
                    }
                }
            }
        }
        const _0x37067f = _0x588e0c.getDynamicProperty("raiyon:sprint");
        if (_0x588e0c.isSprinting && (_0x2bb1d3 >= 0xd || _0xf2e148 >= 0x12 || _0x3fcda5 >= 0x24 || _0x3cbd14 >= 0x8 || _0x2459e6 >= 0x12 || _0x55a838 >= 0x12 || _0x2c0816 >= 0x12 || _0x38dce4 >= 0x12)) {
            if (_0x37067f !== 0x0) {
                _0x588e0c.setDynamicProperty("raiyon:sprint", 0x0);
            }
        } else if (_0x37067f < 0xa) {
            _0x588e0c.setDynamicProperty("raiyon:sprint", _0x37067f + 0x1);
        }
    });
});
world.afterEvents.entityHurt.subscribe(({
    damage: _0x40a174
}) => { });
function weaknessAmplifierSword(_0x53125a, _0x317bd6) {
    const _0x41c699 = {
        0x0: _0x53125a === 0x0 ? 0x0 : _0x53125a === 0x0 ? 0x3 : _0x53125a === 0x3 ? 0x3 : _0x53125a === 0x4 ? 0x4 : _0x53125a === 0x5 ? 0x5 : _0x53125a === 0x6 ? 0x5 : _0x53125a === 0x7 ? 0x6 : _0x53125a === 0x8 ? 0x6 : _0x53125a >= 0x9 ? 0x7 : 0x0,
        0x1: _0x53125a === 0x1 ? 0x2 : _0x53125a === 0x2 ? 0x3 : _0x53125a === 0x3 ? 0x3 : _0x53125a === 0x4 ? 0x4 : _0x53125a === 0x5 ? 0x5 : _0x53125a === 0x6 ? 0x5 : _0x53125a === 0x6 ? 0x6 : _0x53125a === 0x7 ? 0x6 : _0x53125a >= 0x9 ? 0x7 : 0x0,
        0xf: 0x0
    };
    return _0x41c699[_0x317bd6] || 0x0;
}
function weaknessAmplifierAxe(_0x1f7af3, _0x29cef0) {
    const _0x37c9fe = {
        0x0: _0x1f7af3 === 0x1 ? 0x2 : _0x1f7af3 === 0x2 ? 0x3 : _0x1f7af3 === 0x3 ? 0x3 : _0x1f7af3 === 0x4 ? 0x4 : _0x1f7af3 === 0x5 ? 0x5 : _0x1f7af3 === 0x6 ? 0x5 : _0x1f7af3 === 0x7 ? 0x6 : _0x1f7af3 === 0x8 ? 0x6 : _0x1f7af3 >= 0x9 ? 0x7 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0x1: _0x1f7af3 === 0x1 ? 0x2 : _0x1f7af3 === 0x2 ? 0x3 : _0x1f7af3 === 0x3 ? 0x3 : _0x1f7af3 === 0x4 ? 0x4 : _0x1f7af3 === 0x5 ? 0x5 : _0x1f7af3 === 0x6 ? 0x5 : _0x1f7af3 === 0x7 ? 0x6 : _0x1f7af3 === 0x8 ? 0x6 : _0x1f7af3 >= 0x9 ? 0x7 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0x2: _0x1f7af3 === 0x1 ? 0x2 : _0x1f7af3 === 0x2 ? 0x3 : _0x1f7af3 === 0x3 ? 0x3 : _0x1f7af3 === 0x4 ? 0x4 : _0x1f7af3 === 0x5 ? 0x5 : _0x1f7af3 === 0x6 ? 0x5 : _0x1f7af3 === 0x7 ? 0x6 : _0x1f7af3 === 0x8 ? 0x6 : _0x1f7af3 >= 0x9 ? 0x7 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0x3: _0x1f7af3 === 0x1 ? 0x2 : _0x1f7af3 === 0x2 ? 0x3 : _0x1f7af3 === 0x3 ? 0x3 : _0x1f7af3 === 0x4 ? 0x4 : _0x1f7af3 === 0x5 ? 0x5 : _0x1f7af3 === 0x6 ? 0x5 : _0x1f7af3 === 0x7 ? 0x6 : _0x1f7af3 === 0x8 ? 0x6 : _0x1f7af3 >= 0x9 ? 0x7 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0x4: _0x1f7af3 === 0x1 ? 0x2 : _0x1f7af3 === 0x2 ? 0x3 : _0x1f7af3 === 0x3 ? 0x3 : _0x1f7af3 === 0x4 ? 0x4 : _0x1f7af3 === 0x5 ? 0x5 : _0x1f7af3 === 0x6 ? 0x5 : _0x1f7af3 === 0x7 ? 0x6 : _0x1f7af3 === 0x8 ? 0x6 : _0x1f7af3 >= 0x9 ? 0x7 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0x5: _0x1f7af3 === 0x1 ? 0x2 : _0x1f7af3 === 0x2 ? 0x3 : _0x1f7af3 === 0x3 ? 0x3 : _0x1f7af3 === 0x4 ? 0x4 : _0x1f7af3 === 0x5 ? 0x5 : _0x1f7af3 === 0x6 ? 0x5 : _0x1f7af3 === 0x7 ? 0x5 : _0x1f7af3 === 0x8 ? 0x5 : _0x1f7af3 >= 0x9 ? 0x7 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0x6: _0x1f7af3 === 0x1 ? 0x2 : _0x1f7af3 === 0x2 ? 0x3 : _0x1f7af3 === 0x3 ? 0x3 : _0x1f7af3 === 0x4 ? 0x4 : _0x1f7af3 === 0x5 ? 0x5 : _0x1f7af3 === 0x6 ? 0x5 : _0x1f7af3 === 0x7 ? 0x5 : _0x1f7af3 === 0x8 ? 0x5 : _0x1f7af3 >= 0x9 ? 0x6 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0x7: _0x1f7af3 === 0x1 ? 0x2 : _0x1f7af3 === 0x2 ? 0x3 : _0x1f7af3 === 0x3 ? 0x3 : _0x1f7af3 === 0x4 ? 0x4 : _0x1f7af3 === 0x5 ? 0x5 : _0x1f7af3 === 0x6 ? 0x5 : _0x1f7af3 === 0x7 ? 0x5 : _0x1f7af3 === 0x8 ? 0x5 : _0x1f7af3 >= 0x9 ? 0x6 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0x8: _0x1f7af3 === 0x1 ? 0x2 : _0x1f7af3 === 0x2 ? 0x3 : _0x1f7af3 === 0x3 ? 0x3 : _0x1f7af3 === 0x4 ? 0x4 : _0x1f7af3 === 0x5 ? 0x5 : _0x1f7af3 === 0x6 ? 0x5 : _0x1f7af3 === 0x7 ? 0x5 : _0x1f7af3 === 0x8 ? 0x4 : _0x1f7af3 >= 0x9 ? 0x5 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0x9: _0x1f7af3 === 0x1 ? 0x2 : _0x1f7af3 === 0x2 ? 0x3 : _0x1f7af3 === 0x3 ? 0x3 : _0x1f7af3 === 0x4 ? 0x4 : _0x1f7af3 === 0x5 ? 0x5 : _0x1f7af3 === 0x6 ? 0x5 : _0x1f7af3 === 0x7 ? 0x5 : _0x1f7af3 === 0x8 ? 0x4 : _0x1f7af3 >= 0x9 ? 0x5 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0xa: _0x1f7af3 === 0x1 ? 0x2 : _0x1f7af3 === 0x2 ? 0x3 : _0x1f7af3 === 0x3 ? 0x3 : _0x1f7af3 === 0x4 ? 0x3 : _0x1f7af3 === 0x5 ? 0x4 : _0x1f7af3 === 0x6 ? 0x4 : _0x1f7af3 === 0x7 ? 0x4 : _0x1f7af3 === 0x8 ? 0x4 : _0x1f7af3 >= 0x9 ? 0x4 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0xb: _0x1f7af3 === 0x1 ? 0x2 : _0x1f7af3 === 0x2 ? 0x3 : _0x1f7af3 === 0x3 ? 0x2 : _0x1f7af3 === 0x4 ? 0x3 : _0x1f7af3 === 0x5 ? 0x4 : _0x1f7af3 === 0x6 ? 0x4 : _0x1f7af3 === 0x7 ? 0x4 : _0x1f7af3 === 0x8 ? 0x3 : _0x1f7af3 >= 0x9 ? 0x4 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0xc: _0x1f7af3 === 0x1 ? 0x2 : _0x1f7af3 === 0x2 ? 0x2 : _0x1f7af3 === 0x3 ? 0x2 : _0x1f7af3 === 0x4 ? 0x3 : _0x1f7af3 === 0x5 ? 0x4 : _0x1f7af3 === 0x6 ? 0x3 : _0x1f7af3 === 0x7 ? 0x3 : _0x1f7af3 === 0x8 ? 0x3 : _0x1f7af3 >= 0x9 ? 0x3 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0xd: _0x1f7af3 === 0x1 ? 0x1 : _0x1f7af3 === 0x2 ? 0x2 : _0x1f7af3 === 0x3 ? 0x2 : _0x1f7af3 === 0x4 ? 0x3 : _0x1f7af3 === 0x5 ? 0x3 : _0x1f7af3 === 0x6 ? 0x3 : _0x1f7af3 === 0x7 ? 0x3 : _0x1f7af3 === 0x8 ? 0x3 : _0x1f7af3 >= 0x9 ? 0x3 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0xe: _0x1f7af3 === 0x1 ? 0x1 : _0x1f7af3 === 0x2 ? 0x2 : _0x1f7af3 === 0x3 ? 0x2 : _0x1f7af3 === 0x4 ? 0x2 : _0x1f7af3 === 0x5 ? 0x3 : _0x1f7af3 === 0x6 ? 0x3 : _0x1f7af3 === 0x7 ? 0x2 : _0x1f7af3 === 0x8 ? 0x2 : _0x1f7af3 >= 0x9 ? 0x2 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0xf: _0x1f7af3 === 0x1 ? 0x1 : _0x1f7af3 === 0x2 ? 0x2 : _0x1f7af3 === 0x3 ? 0x2 : _0x1f7af3 === 0x4 ? 0x2 : _0x1f7af3 === 0x5 ? 0x3 : _0x1f7af3 === 0x6 ? 0x3 : _0x1f7af3 === 0x7 ? 0x2 : _0x1f7af3 === 0x8 ? 0x2 : _0x1f7af3 >= 0x9 ? 0x2 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0x10: _0x1f7af3 === 0x1 ? 0x1 : _0x1f7af3 === 0x2 ? 0x1 : _0x1f7af3 === 0x3 ? 0x2 : _0x1f7af3 === 0x4 ? 0x1 : _0x1f7af3 === 0x5 ? 0x2 : _0x1f7af3 === 0x6 ? 0x2 : _0x1f7af3 === 0x7 ? 0x2 : _0x1f7af3 === 0x8 ? 0x2 : _0x1f7af3 >= 0x9 ? 0x2 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0x11: _0x1f7af3 === 0x1 ? 0x1 : _0x1f7af3 === 0x2 ? 0x1 : _0x1f7af3 === 0x3 ? 0x1 : _0x1f7af3 === 0x4 ? 0x1 : _0x1f7af3 === 0x5 ? 0x1 : _0x1f7af3 === 0x6 ? 0x1 : _0x1f7af3 === 0x7 ? 0x1 : _0x1f7af3 === 0x8 ? 0x2 : _0x1f7af3 >= 0x9 ? 0x1 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0x12: _0x1f7af3 === 0x1 ? 0x1 : _0x1f7af3 === 0x2 ? 0x1 : _0x1f7af3 === 0x3 ? 0x1 : _0x1f7af3 === 0x4 ? 0x1 : _0x1f7af3 === 0x5 ? 0x1 : _0x1f7af3 === 0x6 ? 0x1 : _0x1f7af3 === 0x7 ? 0x1 : _0x1f7af3 === 0x8 ? 0x1 : _0x1f7af3 >= 0x9 ? 0x1 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0x13: _0x1f7af3 === 0x1 ? 0x1 : _0x1f7af3 === 0x2 ? 0x1 : _0x1f7af3 === 0x3 ? 0x1 : _0x1f7af3 === 0x4 ? 0x1 : _0x1f7af3 === 0x5 ? 0x1 : _0x1f7af3 === 0x6 ? 0x1 : _0x1f7af3 === 0x7 ? 0x1 : _0x1f7af3 === 0x8 ? 0x1 : _0x1f7af3 >= 0x9 ? 0x1 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0x14: _0x1f7af3 === 0x1 ? 0x1 : _0x1f7af3 === 0x2 ? 0x1 : _0x1f7af3 === 0x3 ? 0x1 : _0x1f7af3 === 0x4 ? 0x1 : _0x1f7af3 === 0x5 ? 0x1 : _0x1f7af3 === 0x6 ? 0x1 : _0x1f7af3 === 0x7 ? 0x1 : _0x1f7af3 === 0x8 ? 0x1 : _0x1f7af3 >= 0x9 ? 0x1 : _0x1f7af3 >= 0xc ? 0x7 : 0x0,
        0x15: 0x0
    };
    return _0x37c9fe[_0x29cef0] || 0x0;
}
function weaknessAmplifierMace(_0x3a041f, _0x5e2c7b) {
    const _0x5ef4ba = {
        0x0: _0x3a041f === 0x1 ? 0x2 : _0x3a041f === 0x2 ? 0x3 : _0x3a041f === 0x3 ? 0x3 : _0x3a041f === 0x4 ? 0x4 : _0x3a041f === 0x5 ? 0x5 : _0x3a041f === 0x6 ? 0x5 : _0x3a041f === 0x7 ? 0x6 : _0x3a041f === 0x8 ? 0x6 : _0x3a041f >= 0x9 ? 0x7 : 0x0,
        0x1: _0x3a041f === 0x1 ? 0x2 : _0x3a041f === 0x2 ? 0x3 : _0x3a041f === 0x3 ? 0x3 : _0x3a041f === 0x4 ? 0x4 : _0x3a041f === 0x5 ? 0x5 : _0x3a041f === 0x6 ? 0x5 : _0x3a041f === 0x7 ? 0x6 : _0x3a041f === 0x8 ? 0x6 : _0x3a041f >= 0x9 ? 0x7 : 0x0,
        0x2: _0x3a041f === 0x1 ? 0x2 : _0x3a041f === 0x2 ? 0x3 : _0x3a041f === 0x3 ? 0x3 : _0x3a041f === 0x4 ? 0x4 : _0x3a041f === 0x5 ? 0x5 : _0x3a041f === 0x6 ? 0x5 : _0x3a041f === 0x7 ? 0x6 : _0x3a041f === 0x8 ? 0x6 : _0x3a041f >= 0x9 ? 0x7 : 0x0,
        0x3: _0x3a041f === 0x1 ? 0x2 : _0x3a041f === 0x2 ? 0x3 : _0x3a041f === 0x3 ? 0x3 : _0x3a041f === 0x4 ? 0x4 : _0x3a041f === 0x5 ? 0x5 : _0x3a041f === 0x6 ? 0x5 : _0x3a041f === 0x7 ? 0x6 : _0x3a041f === 0x8 ? 0x6 : _0x3a041f >= 0x9 ? 0x7 : 0x0,
        0x4: _0x3a041f === 0x1 ? 0x2 : _0x3a041f === 0x2 ? 0x3 : _0x3a041f === 0x3 ? 0x3 : _0x3a041f === 0x4 ? 0x4 : _0x3a041f === 0x5 ? 0x5 : _0x3a041f === 0x6 ? 0x5 : _0x3a041f === 0x7 ? 0x6 : _0x3a041f === 0x8 ? 0x6 : _0x3a041f >= 0x9 ? 0x7 : 0x0,
        0x5: _0x3a041f === 0x1 ? 0x2 : _0x3a041f === 0x2 ? 0x3 : _0x3a041f === 0x3 ? 0x3 : _0x3a041f === 0x4 ? 0x4 : _0x3a041f === 0x5 ? 0x5 : _0x3a041f === 0x6 ? 0x5 : _0x3a041f === 0x7 ? 0x5 : _0x3a041f === 0x8 ? 0x5 : _0x3a041f >= 0x9 ? 0x7 : 0x0,
        0x6: _0x3a041f === 0x1 ? 0x2 : _0x3a041f === 0x2 ? 0x3 : _0x3a041f === 0x3 ? 0x3 : _0x3a041f === 0x4 ? 0x4 : _0x3a041f === 0x5 ? 0x5 : _0x3a041f === 0x6 ? 0x5 : _0x3a041f === 0x7 ? 0x5 : _0x3a041f === 0x8 ? 0x5 : _0x3a041f >= 0x9 ? 0x6 : 0x0,
        0x7: _0x3a041f === 0x1 ? 0x2 : _0x3a041f === 0x2 ? 0x3 : _0x3a041f === 0x3 ? 0x3 : _0x3a041f === 0x4 ? 0x4 : _0x3a041f === 0x5 ? 0x5 : _0x3a041f === 0x6 ? 0x5 : _0x3a041f === 0x7 ? 0x5 : _0x3a041f === 0x8 ? 0x5 : _0x3a041f >= 0x9 ? 0x6 : 0x0,
        0x8: _0x3a041f === 0x1 ? 0x2 : _0x3a041f === 0x2 ? 0x3 : _0x3a041f === 0x3 ? 0x3 : _0x3a041f === 0x4 ? 0x4 : _0x3a041f === 0x5 ? 0x5 : _0x3a041f === 0x6 ? 0x5 : _0x3a041f === 0x7 ? 0x5 : _0x3a041f === 0x8 ? 0x4 : _0x3a041f >= 0x9 ? 0x5 : 0x0,
        0x9: _0x3a041f === 0x1 ? 0x2 : _0x3a041f === 0x2 ? 0x3 : _0x3a041f === 0x3 ? 0x3 : _0x3a041f === 0x4 ? 0x4 : _0x3a041f === 0x5 ? 0x5 : _0x3a041f === 0x6 ? 0x5 : _0x3a041f === 0x7 ? 0x5 : _0x3a041f === 0x8 ? 0x4 : _0x3a041f >= 0x9 ? 0x5 : 0x0,
        0xa: _0x3a041f === 0x1 ? 0x2 : _0x3a041f === 0x2 ? 0x3 : _0x3a041f === 0x3 ? 0x3 : _0x3a041f === 0x4 ? 0x3 : _0x3a041f === 0x5 ? 0x4 : _0x3a041f === 0x6 ? 0x4 : _0x3a041f === 0x7 ? 0x4 : _0x3a041f === 0x8 ? 0x4 : _0x3a041f >= 0x9 ? 0x4 : 0x0,
        0xb: _0x3a041f === 0x1 ? 0x2 : _0x3a041f === 0x2 ? 0x3 : _0x3a041f === 0x3 ? 0x2 : _0x3a041f === 0x4 ? 0x3 : _0x3a041f === 0x5 ? 0x4 : _0x3a041f === 0x6 ? 0x4 : _0x3a041f === 0x7 ? 0x4 : _0x3a041f === 0x8 ? 0x3 : _0x3a041f >= 0x9 ? 0x4 : 0x0,
        0xc: _0x3a041f === 0x1 ? 0x2 : _0x3a041f === 0x2 ? 0x2 : _0x3a041f === 0x3 ? 0x2 : _0x3a041f === 0x4 ? 0x3 : _0x3a041f === 0x5 ? 0x4 : _0x3a041f === 0x6 ? 0x3 : _0x3a041f === 0x7 ? 0x3 : _0x3a041f === 0x8 ? 0x3 : _0x3a041f >= 0x9 ? 0x3 : 0x0,
        0xd: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x2 : _0x3a041f === 0x3 ? 0x2 : _0x3a041f === 0x4 ? 0x3 : _0x3a041f === 0x5 ? 0x4 : _0x3a041f === 0x6 ? 0x3 : _0x3a041f === 0x7 ? 0x3 : _0x3a041f === 0x8 ? 0x3 : _0x3a041f >= 0x9 ? 0x3 : 0x0,
        0xe: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x2 : _0x3a041f === 0x3 ? 0x2 : _0x3a041f === 0x4 ? 0x2 : _0x3a041f === 0x5 ? 0x4 : _0x3a041f === 0x6 ? 0x3 : _0x3a041f === 0x7 ? 0x2 : _0x3a041f === 0x8 ? 0x2 : _0x3a041f >= 0x9 ? 0x2 : 0x0,
        0xf: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x2 : _0x3a041f === 0x3 ? 0x2 : _0x3a041f === 0x4 ? 0x2 : _0x3a041f === 0x5 ? 0x4 : _0x3a041f === 0x6 ? 0x3 : _0x3a041f === 0x7 ? 0x2 : _0x3a041f === 0x8 ? 0x2 : _0x3a041f >= 0x9 ? 0x2 : 0x0,
        0x10: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x2 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x4 : _0x3a041f === 0x6 ? 0x2 : _0x3a041f === 0x7 ? 0x2 : _0x3a041f === 0x8 ? 0x2 : _0x3a041f >= 0x9 ? 0x2 : 0x0,
        0x11: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x4 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x2 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x12: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x4 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x13: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x4 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x14: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x4 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x15: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x4 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x16: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x3 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x17: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x3 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x18: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x3 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x19: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x3 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x1a: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x3 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x1b: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x3 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x1c: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x3 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x1d: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x3 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x1e: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x3 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x1f: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x2 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x20: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x2 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x21: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x2 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x22: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x2 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x23: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x2 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x24: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x1 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x25: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x1 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x26: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x1 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x27: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x1 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x28: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x1 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x29: _0x3a041f === 0x1 ? 0x1 : _0x3a041f === 0x2 ? 0x1 : _0x3a041f === 0x3 ? 0x1 : _0x3a041f === 0x4 ? 0x1 : _0x3a041f === 0x5 ? 0x1 : _0x3a041f === 0x6 ? 0x1 : _0x3a041f === 0x7 ? 0x1 : _0x3a041f === 0x8 ? 0x1 : _0x3a041f >= 0x9 ? 0x1 : 0x0,
        0x2a: 0x0
    };
    return _0x5ef4ba[_0x5e2c7b] || 0x0;
}
function damageId(_0x195cdb) {
    const _0x53e715 = {
        'minecraft:mace': 0x5,
        'minecraft:trident': 0x8,
        'minecraft:wooden_hoe': 0x2,
        'minecraft:stone_hoe': 0x3,
        'minecraft:iron_hoe': 0x4,
        'minecraft:golden_hoe': 0x2,
        'minecraft:diamond_hoe': 0x5,
        'minecraft:netherite_hoe': 0x6,
        'minecraft:wooden_pickaxe': 0x2,
        'minecraft:stone_pickaxe': 0x3,
        'minecraft:iron_pickaxe': 0x4,
        'minecraft:golden_pickaxe': 0x2,
        'minecraft:diamond_pickaxe': 0x5,
        'minecraft:netherite_pickaxe': 0x6,
        'minecraft:wooden_shovel': 0x1,
        'minecraft:stone_shovel': 0x2,
        'minecraft:iron_shovel': 0x3,
        'minecraft:golden_shovel': 0x1,
        'minecraft:diamond_shovel': 0x4,
        'minecraft:netherite_shovel': 0x4,
        'raiyon:wooden_axe': 0x7,
        'raiyon:stone_axe': 0x9,
        'raiyon:iron_axe': 0x9,
        'raiyon:golden_axe': 0x7,
        'raiyon:diamond_axe': 0x9,
        'raiyon:netherite_axe': 0xa,
        'minecraft:wooden_sword': 0x4,
        'minecraft:stone_sword': 0x5,
        'minecraft:iron_sword': 0x6,
        'minecraft:golden_sword': 0x4,
        'minecraft:diamond_sword': 0x7,
        'minecraft:netherite_sword': 0x8
    };
    return _0x53e715[_0x195cdb] || 0x6;
}
system.runInterval(() => {
    const _0x2b1815 = world.getAllPlayers();
    _0x2b1815.forEach(_0x861fd0 => {
        const _0x2ece6d = _0x861fd0.getComponent("inventory").container;
        const _0x136016 = [];
        for (let _0x436684 = 0x0; _0x436684 < 0x24; _0x436684++) {
            const _0x291c86 = _0x2ece6d.getItem(_0x436684);
            if (_0x291c86?.['typeId']['includes']("sword")) {
                _0x136016.push(_0x436684);
            }
        }
        _0x136016.forEach(_0x115fd5 => {
            const _0x7f3d18 = _0x2ece6d.getItem(_0x115fd5);
            function _0x262c60(_0x359c6e) {
                const _0x5c1992 = _0x359c6e.getComponent("enchantable").getEnchantments();
                return _0x5c1992.reduce((_0x5c5da0, _0x18efde) => Math.max(_0x5c5da0, _0x18efde.level), 0x0);
            }
            const _0x37c373 = _0x7f3d18.getComponent('enchantable');
            const _0x1e2e8b = _0x37c373.getEnchantments();
            let _0x3bfa78 = _0x7f3d18.getLore() || [];
            if (_0x7f3d18.getDynamicProperty('jc:se') !== true) {
                _0x7f3d18.setDynamicProperty('jc:se', true);
                _0x2ece6d.setItem(_0x115fd5, _0x7f3d18);
            }
            if (_0x1e2e8b.length > 0x0 && !_0x3bfa78.find(_0x3b9a2c => /§r§7Sweeping Edge (I|II|III)/.test(_0x3b9a2c)) && _0x7f3d18.getDynamicProperty("try:e") !== 0x1) {
                const _0x5c4e4e = _0x262c60(_0x7f3d18);
                let _0x20165e = _0x5c4e4e === 0x1 ? 'I' : _0x5c4e4e === 0x2 ? 'II' : _0x5c4e4e >= 0x3 ? "III" : undefined;
                if (_0x20165e !== undefined && Math.random() <= 0.45) {
                    _0x3bfa78.push("§r§7Sweeping Edge " + _0x20165e);
                }
                _0x7f3d18.setLore(_0x3bfa78);
                _0x7f3d18.setDynamicProperty("try:e", 0x1);
                _0x2ece6d.setItem(_0x115fd5, _0x7f3d18);
            } else {
                if (_0x1e2e8b.length === 0x0) {
                    const _0x4dc75c = _0x3bfa78.filter(_0x5104a4 => !/§r§7Sweeping Edge (I|II|III)/.test(_0x5104a4));
                    _0x7f3d18.setLore(_0x4dc75c);
                    _0x7f3d18.setDynamicProperty("try:e", 0x0);
                    _0x2ece6d.setItem(_0x115fd5, _0x7f3d18);
                }
            }
        });
    });
}, 0x14);
